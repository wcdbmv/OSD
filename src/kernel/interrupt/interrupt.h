#ifndef __INTERRUPT_H__
#define __INTERRUPT_H__

#include "stdlib/syscall.h"

#define INTERRUPT_VECTOR_DIV_BY_ZERO		0
#define INTERRUPT_VECTOR_DEBUG			1
#define INTERRUPT_VECTOR_NMI			2
#define INTERRUPT_VECTOR_BREAKPOINT		3
#define INTERRUPT_VECTOR_OVERFLOW		4
#define INTERRUPT_VECTOR_BOUND_RANGE		5
#define INTERRUPT_VECTOR_INVALID_OPCODE		6
#define INTERRUPT_VECTOR_DEVICE_NOT_AVAILABLE	7
#define INTERRUPT_VECTOR_DOUBLE_FAULT		8
// reserved					9
#define INTERRUPT_VECTOR_INVALID_TSS		10
#define INTERRUPT_VECTOR_SEGMENT_NOT_PRESENT	11
#define INTERRUPT_VECTOR_STACK			12
#define INTERRUPT_VECTOR_GENERAL_PROTECTION	13
#define INTERRUPT_VECTOR_PAGE_FAULT		14
// reserved					15
#define INTERRUPT_VECTOR_X86_FP_INSTRUCTION	16
#define INTERRUPT_VECTOR_ALIGNMENT_CHECK	17
#define INTERRUPT_VECTOR_MACHINE_CHECK		18
#define INTERRUPT_VECTOR_SIMD_FP		19
// reserved					20..29
#define INTERRUPT_VECTOR_SECURITY_EXCEPTION	30
// reserved					30, 31

#define INTERRUPT_VECTOR_TIMER			32
#define INTERRUPT_VECTOR_KEYBOARD		33

#ifndef __ASSEMBLER__
void interrupt_init(void);
void interrupt_enable(void);
#endif

#endif
